@{
    ViewData["Title"] = "Empleados";
}
@model List<Empleado>


<div class="row">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header pb-0">
                <h6>Lista de Empleados</h6>
                <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createEntidadModal">Nueva Empleado</button>
            </div>
            @if (Model.Any())
            {
                <div class="card-body px-0 pt-0 pb-2">
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Nombre Completo</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Documento</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Email</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Entidad</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Estado</th>
                                    <th class="text-secondary opacity-7"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var empleado in Model)
                                {
                                    <tr>
                                        <td class="align-middle">
                                            <span class="text-secondary text-xs font-weight-bold">@($"{empleado.Nombres} {empleado.Apellidos}")</span>
                                        </td>
                                        <td>
                                            <div class="d-flex flex-column justify-content-center">
                                                <h6 class="mb-0 text-sm">@empleado.Documento</h6>
                                            </div>
                                        </td>
                                        <td class="align-middle">
                                            <span class="text-secondary text-xs font-weight-bold">@empleado.Email</span>
                                        </td>
                                        <td class="align-middle">
                                            <span class="text-secondary text-xs font-weight-bold">@empleado.NombreEntidad</span>
                                        </td>
                                        <td class="align-middle">
                                            <span class="text-secondary text-xs font-weight-bold">@(empleado.Estado ? "Activo" : "Inactivo")</span>
                                        </td>
                                        <td class="align-middle">
                                            <a href="javascript:;" class="text-secondary font-weight-bold text-xs" data-bs-toggle="modal" data-bs-target="#editEmpleadoModal" onclick="openEditModal(@empleado.IdEmpleado, '@empleado.Nombres', '@empleado.Apellidos', '@empleado.Documento', '@empleado.Email', @(empleado.Estado.ToString().ToLower()),@empleado.IdEntidad)">
                                                Edit
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
    
<!-- Modal para Editar Empleado -->
<div class="modal fade" id="editEmpleadoModal" tabindex="-1" aria-labelledby="editEmpleadoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editEmpleadoModalLabel">Editar Empleado</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editEmpleadoForm">
                    <input type="hidden" id="editIdEmpleado" />
                    <div class="mb-3">
                        <label for="editNombres" class="form-label">Nombres</label>
                        <input type="text" class="form-control" id="editNombres" />
                    </div>
                    <div class="mb-3">
                        <label for="editApellidos" class="form-label">Apellidos</label>
                        <input type="text" class="form-control" id="editApellidos" />
                    </div>
                    <div class="mb-3">
                        <label for="editDocumento" class="form-label">Documento</label>
                        <input type="text" class="form-control" id="editDocumento" />
                    </div>
                    <div class="mb-3">
                        <label for="editEntidad" class="form-label">Entidad</label>
                        <input type="text" class="form-control" id="editEntidad" />
                    </div>
                    <div class="mb-3">
                        <label for="editEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="editEmail" />
                    </div>
                    <div class="mb-3">
                        <label for="editEstado" class="form-label">Estado</label>
                        <select class="form-control" id="editEstado">
                            <option value="true">Activo</option>
                            <option value="false">Inactivo</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="saveChangesButton">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Crear Empleado -->
<div class="modal fade" id="createEmpleadoModal" tabindex="-1" aria-labelledby="createEmpleadoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createEmpleadoModalLabel">Crear Empleado</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createEmpleadoForm">
                    <div class="mb-3">
                        <label for="createNombres" class="form-label">Nombres</label>
                        <input type="text" class="form-control" id="createNombres" required />
                    </div>
                    <div class="mb-3">
                        <label for="createApellidos" class="form-label">Apellidos</label>
                        <input type="text" class="form-control" id="createApellidos" required />
                    </div>
                    <div class="mb-3">
                        <label for="createDocumento" class="form-label">Documento</label>
                        <input type="text" class="form-control" id="createDocumento" required />
                    </div>
                    <div class="mb-3">
                        <label for="createEntidad" class="form-label">Entidad</label>
                        <input type="text" class="form-control" id="createEntidad" required />
                    </div>
                    <div class="mb-3">
                        <label for="createEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="createEmail" required />
                    </div>
                    <div class="mb-3">
                        <label for="createEstado" class="form-label">Estado</label>
                        <select class="form-control" id="createEstado" required>
                            <option value="true">Activo</option>
                            <option value="false">Inactivo</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="createEmpleadoButton">Crear</button>
            </div>
        </div>
    </div>
</div>

<script>
    function openEditModal(id, nombres, apellidos, documento, email, estado, entidad) {
        // Llenar los campos del modal con los datos del empleado
        document.getElementById('editIdEmpleado').value = id;
        document.getElementById('editNombres').value = nombres;
        document.getElementById('editApellidos').value = apellidos;
        document.getElementById('editDocumento').value = documento;
        document.getElementById('editEmail').value = email;
        document.getElementById('editEstado').value = estado;
        document.getElementById('editEntidad').value = entidad;
    }

    document.getElementById('saveChangesButton').addEventListener('click', function () {
        const idEmpleado = document.getElementById('editIdEmpleado').value;
        const nombres = document.getElementById('editNombres').value;
        const apellidos = document.getElementById('editApellidos').value;
        const documento = document.getElementById('editDocumento').value;
        const email = document.getElementById('editEmail').value;
        const estado = document.getElementById('editEstado').value;
        const entidad = document.getElementById('editEntidad').value;


        const updatedEmpleado = {
            IdEmpleado: idEmpleado,
            Nombres: nombres,
            Apellidos: apellidos,
            Documento: documento,
            Email: email,
            Estado: estado === 'true',
            IdEntidad: entidad,
            Token: "",
            callback: ""
        };

        // Aquí llamas a tu API para actualizar el empleado
        fetch('/Empleado/Edit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updatedEmpleado)
        })
            .then(response => {
                if (response.ok) {
                    alert('Empleado actualizado correctamente.');
                    location.reload(); // Recargar la página
                } else {
                    alert('Error al actualizar el empleado.');
                }
            })
            .catch(error => console.error('Error:', error));
    });

    document.getElementById('createEmpleadoButton').addEventListener('click', function () {
        const nombres = document.getElementById('createNombres').value;
        const apellidos = document.getElementById('createApellidos').value;
        const documento = document.getElementById('createDocumento').value;
        const email = document.getElementById('createEmail').value;
        const estado = document.getElementById('createEstado').value === 'true';
        const entidad = document.getElementById('createEntidad').value;

        const newEmpleado = {
            Nombres: nombres,
            Apellidos: apellidos,
            Documento: documento,
            Email: email,
            Estado: estado,
            IdEntidad: entidad
        };

        // Llamar a la API para crear el empleado
        fetch('/Empleado/Create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(newEmpleado)
        })
            .then(response => {
                if (response.ok) {
                    alert('Empleado creado correctamente.');
                    location.reload(); // Recargar la página
                } else {
                    response.text().then(text => alert(`Error: ${text}`));
                }
            })
            .catch(error => console.error('Error:', error));
    });
</script>
